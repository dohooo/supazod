/*
 * ==========================================
 * |          GENERATED BY SUPAZOD          |
 * ==========================================
 */

import { z } from "zod";
import { type Json } from "./types";

export const publicProviderSlugSchema = z.union([
  z.literal("github"),
  z.literal("slack"),
  z.literal("discord"),
  z.literal("web"),
  z.literal("linear"),
  z.literal("jira"),
  z.literal("memory"),
  z.literal("dosu_app"),
]);

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(jsonSchema),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const publicUserStatusSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const publicUsersInsertSchema = z.object({
  username: z.string(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: publicUserStatusSchema.optional().nullable(),
});

export const publicUsersUpdateSchema = z.object({
  username: z.string().optional(),
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: publicUserStatusSchema.optional().nullable(),
});

export const publicNonUpdatableViewRowSchema = z.object({
  username: z.string().nullable(),
});

export const publicGetStatusArgsSchema = z.object({
  name_param: z.string(),
});

export const publicGetStatusReturnsSchema = publicUserStatusSchema;

export const schemaBUserStatusSchema = z.union([
  z.literal("ONLINE"),
  z.literal("OFFLINE"),
]);

export const schemaBUsersRowSchema = z.object({
  username: z.string(),
  data: jsonSchema.nullable(),
  status: publicUserStatusSchema.nullable(),
});

export const schemaBUsersInsertSchema = z.object({
  username: z.string(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: schemaBUserStatusSchema.optional().nullable(),
});

export const schemaBUsersUpdateSchema = z.object({
  data: jsonSchema.optional().nullable(),
  age_range: z.unknown().optional().nullable(),
  catchphrase: z.unknown().optional().nullable(),
  status: schemaBUserStatusSchema.optional().nullable(),
});

export const schemaBNonUpdatableViewRowSchema = z.object({
  username: z.string().nullable(),
});

export const schemaBGetDeploymentConfigSchemaArgsSchema = z.object({});

export const schemaBGetDeploymentConfigSchemaReturnsSchema = jsonSchema;

export const schemaBGetStatusArgsSchema = z.object({
  name_param: z.string(),
});

export const schemaBGetStatusReturnsSchema = schemaBUserStatusSchema;

export const publicUsersRowSchema = z.object({
  username: z.string(),
  data: jsonSchema.nullable(),
  age_range: z.unknown().nullable(),
  catchphrase: z.unknown().nullable(),
  status: publicUserStatusSchema.nullable(),
  platform: publicProviderSlugSchema,
});
